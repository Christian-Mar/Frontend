{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/christianmarginet/Documents/next-Frontend/components/contact/contact-form.js\";\nimport { useState, useEffect } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nasync function sendContactData(contactDetails) {\n  const response = await fetch('/api/contact', {\n    method: 'POST',\n    body: JSON.stringify(contactDetails),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.messag || 'Er ging iets verkeerd.');\n  }\n}\n\nfunction ContactForm() {\n  const {\n    0: enteredEmail,\n    1: setEnteredEmail\n  } = useState('');\n  const {\n    0: enteredName,\n    1: setEnteredName\n  } = useState('');\n  const {\n    0: enteredMessage,\n    1: setEnteredMessage\n  } = useState('');\n  const {\n    0: requestStatus,\n    1: setRequestStatus\n  } = useState(); // pending, success, error\n\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState();\n  useEffect(() => {\n    if (requestStatus === 'pending' || requestStatus === 'error') {\n      setTimeout(() => {\n        setRe;\n      }, 3000);\n    }\n  }, []);\n\n  async function sendMessageHandler(event) {\n    event.preventDefault(); // optional: add client-side validation\n\n    setRequestStatus('pending');\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage\n      });\n      setRequestStatus('success');\n    } catch (error) {\n      setRequestError(error.message);\n      setRequestStatus('error');\n    }\n  }\n\n  let notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: 'Your message is on its way!'\n    };\n  }\n\n  if (requestStatus === 'success') {\n    notification = {\n      status: 'success',\n      title: 'Succes!',\n      message: 'Message sent successfully!'\n    };\n  }\n\n  if (requestStatus === 'error') {\n    notification = {\n      status: 'error',\n      title: 'Error!',\n      message: requestError\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Iets ontdekt? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Jouw e-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: event => setEnteredEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Jouw naam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: event => setEnteredName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Vertel!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          id: \"message\",\n          cols: \"30\",\n          rows: \"10\",\n          required: true,\n          value: enteredMessage,\n          onChange: event => setEnteredMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Verzenden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/christianmarginet/Documents/next-Frontend/components/contact/contact-form.js"],"names":["useState","useEffect","classes","Notification","sendContactData","contactDetails","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","messag","ContactForm","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","requestError","setRequestError","setTimeout","setRe","sendMessageHandler","event","preventDefault","email","name","message","error","notification","status","title","contact","form","controls","control","target","value","actions"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nasync function sendContactData(contactDetails) {\n\tconst response = await fetch('/api/contact', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(contactDetails),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.messag || 'Er ging iets verkeerd.');\n\t}\n}\n\nfunction ContactForm() {\n\tconst [enteredEmail, setEnteredEmail] = useState('');\n\tconst [enteredName, setEnteredName] = useState('');\n\tconst [enteredMessage, setEnteredMessage] = useState('');\n\tconst [requestStatus, setRequestStatus] = useState(); // pending, success, error\n  const [requestError, setRequestError] = useState();\n\t\n  useEffect(() => {\n    if (requestStatus === 'pending' || requestStatus === 'error') {\n      setTimeout(() => {\n        setRe\n      }, 3000);\n    }\n  }, []);\n\n  async function sendMessageHandler(event) {\n\t\tevent.preventDefault();\n\n\t\t// optional: add client-side validation\n\n\t\tsetRequestStatus('pending');\n\n\t\ttry {\n\t\t\tawait sendContactData({\n\t\t\t\temail: enteredEmail,\n\t\t\t\tname: enteredName,\n\t\t\t\tmessage: enteredMessage,\n\t\t\t});\n\t\t\tsetRequestStatus('success');\n\t\t} catch (error) {\n      setRequestError(error.message);\n\t\t\tsetRequestStatus('error');\n\t\t}\n\t}\n\n  let notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: 'Your message is on its way!'\n    };\n  }\n\n  if (requestStatus === 'success') {\n\t\tnotification = {\n\t\t\tstatus: 'success',\n\t\t\ttitle: 'Succes!',\n\t\t\tmessage: 'Message sent successfully!',\n\t\t};\n\t}\n\n  if (requestStatus === 'error') {\n\t\tnotification = {\n\t\t\tstatus: 'error',\n\t\t\ttitle: 'Error!',\n\t\t\tmessage: requestError,\n\t\t};\n\t}\n\n\treturn (\n\t\t<section className={classes.contact}>\n\t\t\t<h1>Iets ontdekt? </h1>\n\t\t\t<form className={classes.form} onSubmit={sendMessageHandler}>\n\t\t\t\t<div className={classes.controls}>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='email'>Jouw e-mail</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={enteredEmail}\n\t\t\t\t\t\t\tonChange={event => setEnteredEmail(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='name'>Jouw naam</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={enteredName}\n\t\t\t\t\t\t\tonChange={event => setEnteredName(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='message'>Vertel!</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tname='message'\n\t\t\t\t\t\tid='message'\n\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\trows='10'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tvalue={enteredMessage}\n\t\t\t\t\t\tonChange={event => setEnteredMessage(event.target.value)}\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<button>Verzenden</button>\n\t\t\t\t</div>\n\t\t\t</form>\n      {notification && (<Notification status={notification.status} title={notification.title} message={notification.message}/>)}\n\t\t</section>\n\t);\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}