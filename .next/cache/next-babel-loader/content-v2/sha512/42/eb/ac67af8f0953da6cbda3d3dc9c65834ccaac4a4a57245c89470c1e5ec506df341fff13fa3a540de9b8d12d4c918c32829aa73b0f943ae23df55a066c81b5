{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/christianmarginet/Documents/next-Frontend/components/contact/contact-form.js\";\nimport { useState } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nasync function sendContactData(contactDetails) {\n  const response = await fetch('/api/contact', {\n    method: 'POST',\n    body: JSON.stringify(contactDetails),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.messag || 'Er ging iets verkeerd.');\n  }\n}\n\nfunction ContactForm() {\n  const {\n    0: enteredEmail,\n    1: setEnteredEmail\n  } = useState('');\n  const {\n    0: enteredName,\n    1: setEnteredName\n  } = useState('');\n  const {\n    0: enteredMessage,\n    1: setEnteredMessage\n  } = useState('');\n  const {\n    0: requestStatus,\n    1: setRequestStatus\n  } = useState(); // pending, success, error\n\n  async function sendMessageHandler(event) {\n    event.preventDefault(); // optional: add client-side validation\n\n    setRequestStatus('pending');\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage\n      });\n      setRequestStatus('success');\n    } catch (error) {\n      setRequestStatus('error');\n    }\n  }\n\n  let notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: ''\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Iets ontdekt? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Jouw e-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: event => setEnteredEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Jouw naam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: event => setEnteredName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Vertel!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          id: \"message\",\n          cols: \"30\",\n          rows: \"10\",\n          required: true,\n          value: enteredMessage,\n          onChange: event => setEnteredMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Verzenden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/christianmarginet/Documents/next-Frontend/components/contact/contact-form.js"],"names":["useState","classes","Notification","sendContactData","contactDetails","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","messag","ContactForm","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","sendMessageHandler","event","preventDefault","email","name","message","error","notification","status","title","contact","form","controls","control","target","value","actions"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nasync function sendContactData(contactDetails) {\n\tconst response = await fetch('/api/contact', {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(contactDetails),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.messag || 'Er ging iets verkeerd.');\n\t}\n}\n\nfunction ContactForm() {\n\tconst [enteredEmail, setEnteredEmail] = useState('');\n\tconst [enteredName, setEnteredName] = useState('');\n\tconst [enteredMessage, setEnteredMessage] = useState('');\n\tconst [requestStatus, setRequestStatus] = useState(); // pending, success, error\n\n\tasync function sendMessageHandler(event) {\n\t\tevent.preventDefault();\n\n\t\t// optional: add client-side validation\n\n\t\tsetRequestStatus('pending');\n\n\t\ttry {\n\t\t\tawait sendContactData({\n\t\t\t\temail: enteredEmail,\n\t\t\t\tname: enteredName,\n\t\t\t\tmessage: enteredMessage,\n\t\t\t});\n\t\t\tsetRequestStatus('success');\n\t\t} catch (error) {\n\t\t\tsetRequestStatus('error');\n\t\t}\n\t}\n\n  let notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: ''\n    }\n\n  }\n\n\treturn (\n\t\t<section className={classes.contact}>\n\t\t\t<h1>Iets ontdekt? </h1>\n\t\t\t<form className={classes.form} onSubmit={sendMessageHandler}>\n\t\t\t\t<div className={classes.controls}>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='email'>Jouw e-mail</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={enteredEmail}\n\t\t\t\t\t\t\tonChange={event => setEnteredEmail(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='name'>Jouw naam</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tvalue={enteredName}\n\t\t\t\t\t\t\tonChange={event => setEnteredName(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor='message'>Vertel!</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tname='message'\n\t\t\t\t\t\tid='message'\n\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\trows='10'\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tvalue={enteredMessage}\n\t\t\t\t\t\tonChange={event => setEnteredMessage(event.target.value)}\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<button>Verzenden</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t);\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}