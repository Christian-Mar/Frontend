{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/christianmarginet/Documents/next-Frontend/pages/posts/[slug].js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport PostContent from '../../components/posts/post-detail/post-content';\n\nfunction SinglePostPage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PostContent, {\n      post: props.post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SinglePostPage;\nexport var __N_SSG = true;\nexport default SinglePostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePostPage\");","map":{"version":3,"sources":["/Users/christianmarginet/Documents/next-Frontend/pages/posts/[slug].js"],"names":["Fragment","Head","PostContent","SinglePostPage","props","post"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,iDAAxB;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC9B,sBAAO,QAAC,QAAD;AAAA,2BAAU,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;KAFQF,c;;AAiCT,eAAeA,cAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport PostContent from '../../components/posts/post-detail/post-content';\nimport { getPostData, getPostsFiles } from '../../lib/posts-util';\n\nfunction SinglePostPage(props) {\n\treturn <Fragment><PostContent post={props.post} /></Fragment>;\n}\n\nexport function getStaticProps(context) {\n\tconst { params } = context;\n\tconst { slug } = params;\n\n\tconst postData = getPostData(slug);\n\n\treturn {\n\t\tprops: {\n\t\t\tpost: postData,\n\t\t},\n\t\trevalidate: 600,\n\t\t/* revalidate doet ee update om de 600 seconden (10 minuten), wat we in de vorige returns met getStaticProps niet gedaan hebben om niet door alle files te moeten gaan, wat zou wegen op de performance (requests vertragen)*/\n\t};\n}\n\n// getStaticProps werkt niet op zichzelf voor deze dynamische pagina\n// Path naar de de juiste content is nog nodig\n\nexport function getStaticPaths() {\n\tconst postFilenames = getPostsFiles(); //komt uit utils\n\n\tconst slugs = postFilenames.map(fileName => fileName.replace(/\\.md$/, ''));\n\n\treturn {\n\t\tpaths: slugs.map(slug => ({ params: { slug: slug } })),\n\t\tfallback: false,\n\t}; // dit zorgt ervoor dat alle paths er vooraf zijn\n}\n\nexport default SinglePostPage;\n"]},"metadata":{},"sourceType":"module"}